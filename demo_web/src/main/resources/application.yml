server:
  port: 8135
  servlet:
    context-path: /demo
  tomcat:
    uri-encoding: UTF-8

spring:
  profiles:
    active: sdf
  aop:
    auto: true
  jackson:
    time-zone: Asia/Shanghai
    serialization:
      write-dates-as-timestamps: true
#  横幅：off：关闭打印、console:控制台打印、log:日志打印
  main:
    banner-mode: console

#  配置数据库连接
  datasource:
#    url: jdbc:mysql://134.175.103.104/jdbc?useUnicode=true&characterEncoding=utf8&useSSL=false
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    username: root
#    password: 111111
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5   #初始化连接个数
      min-idle: 5       #最小连接个数
      max-active: 20    #最大连接个数
      max-wait: 6000    #配置获取连接等待超时的时间
      time-between-eviction-runs-millis: 1200000    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      min-evictable-idle-time-millis: 1200000       # 配置一个连接在池中最小生存的时间，单位是毫秒
      max-evictable-idle-time-millis: 3600000       # 配置一个连接在池中最大生存的时间，单位是毫秒
#      用来监测连接是否有效的sql,是1个查询语句,若不设置testOnBorrow、testOnReturn、testWhileIdle都不起作用    mysql中为 select 'x'   oracle中为 select 1 from dual
#      validation-query: select 'x'
      validation-query: SELECT 1 FROM DUAL
      validation-query-timeout: 60000               # 检查sql超时时间
      test-while-idle: true     # 申请连接的时候检测
      test-on-borrow: false      #  申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false      #  归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
#      exception-sorter: true    # 当数据库抛出不可恢复的异常时,抛弃该连接 （会自动配置）
      pool-prepared-statements: true                            # 打开PSCache(缓存)，并且指定每个连接上PSCache的大小,mysql5.5+建议开启
      max-pool-prepared-statement-per-connection-size: 20      #  当值大于0时poolPreparedStatements(pool-prepared-statements)会自动修改为true,指定每个连接上PSCache的大小
      use-global-data-source-stat: true     # 合并多个DruidDataSource的监控数据
      filters: stat,wall        #  属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有： 监控统计用的filter:stat日志用的filter:log4j防御sql注入的filter:wall
      filter:
#        监控统计
        stat:
#          数据库类型
          db-type: mysql
#          慢SQL
          log-slow-sql: true
#          慢SQL执行时间
          slow-sql-millis: 3500
        wall:
          enabled: true
          db-type: mysql
          config:
            delete-allow: false
            drop-table-allow: false
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000      #  通过connectProperties属性来打开mergeSql功能；慢SQL记录
#      statViewServlet配置，说明配置参考druid wiki
      stat-view-servlet:
        enabled: false           # 是否启用statViewServlet配置(监控web页面)，默认关闭配置监控服务器, 1.1.10以后的版本需要指定为true 不然默认是关闭的就会出现404
#        url-pattern: "/druid/*"     # 访问监控页面
#        reset-enable: false         # 禁止手动重置监控数据
        login-username: sdfAdmin      # 设置监控页面的登陆名
        login-password: 111111        # 设置监控页面的登陆密码
        deny: 10.0.0.198      # 添加IP黑名单，当白名单和黑名单重复时，黑名单优先级更高
        allow: 10.0.0.127      # 添加IP白名单
      #      WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
      web-stat-filter:
        enabled: false         # 是否开启webstatFilter
        url-pattern: /*       # 添加过滤规则
        exclusions: "*.html,*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid,/druid/*"     # 忽略过滤格式
        session-stat-max-count: 1000      # 监控最大session数，默认是1000
        session-stat-enable: true         # 是否启用session的统计功能
        profile-enable: true              # 是否启用监控单个Url调用的sql列表
#        principal-session-name: session_user_key  # 使druid当前session的用户是谁，session_user_key是你保存到session中的sessionName
#        principal-cookie-name: cookie_user_key    # 使druid当前的user是谁,cookie_user_key是你保存在cookie中的cookieName